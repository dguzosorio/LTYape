version: '3.8'

services:
  # Infraestructura
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pass@word1
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - ltyape-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ltyape-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - ltyape-network

  # Microservicios
  transaction-service:
    build:
      context: .
      dockerfile: src/TransactionService/Dockerfile
    depends_on:
      - sqlserver
      - kafka
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - ltyape-network

  antifraud-service:
    build:
      context: .
      dockerfile: src/AntiFraudService/Dockerfile
    depends_on:
      - sqlserver
      - kafka
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - ltyape-network

networks:
  ltyape-network:
    driver: bridge

volumes:
  sqlserver-data: 