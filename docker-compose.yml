services:
  # Base de datos SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pass@word1
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - yape-network
    restart: always

  # Infraestructura Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - yape-network
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_MS: 86400000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_JMX_PORT: 9991
    networks:
      - yape-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service to verify that topics are created
  init-kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    container_name: init-kafka
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c '
      echo "Waiting for Kafka to be available..." &&
      cub kafka-ready -b kafka:9092 1 180 &&
      echo "Creating topics..." &&
      kafka-topics --bootstrap-server kafka:9092 --list | grep "transaction-validation-request" || kafka-topics --bootstrap-server kafka:9092 --create --topic transaction-validation-request --partitions 1 --replication-factor 1 &&
      kafka-topics --bootstrap-server kafka:9092 --list | grep "transaction-validation-response" || kafka-topics --bootstrap-server kafka:9092 --create --topic transaction-validation-response --partitions 1 --replication-factor 1 &&
      echo "Available topics:" &&
      kafka-topics --bootstrap-server kafka:9092 --list
      '
    networks:
      - yape-network

  # Transaction API
  transaction-service:
    build:
      context: ./src/TransactionService
      dockerfile: Dockerfile
    container_name: transaction-service
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
      sqlserver:
        condition: service_started
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=TransactionDb;User Id=sa;Password=Pass@word1;TrustServerCertificate=True;
      - Kafka__BootstrapServers=kafka:9092
      - Kafka__GroupId=transaction-service
      - Kafka__Topics__TransactionValidationRequest=transaction-validation-request
      - Kafka__Topics__TransactionValidationResponse=transaction-validation-response
    networks:
      - yape-network
    restart: on-failure

  # Anti-Fraud API
  antifraud-service:
    build:
      context: ./src/AntiFraudService
      dockerfile: Dockerfile
    container_name: antifraud-service
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
      sqlserver:
        condition: service_started
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=AntiFraudDb;User Id=sa;Password=Pass@word1;TrustServerCertificate=True;
      - Kafka__BootstrapServers=kafka:9092
      - Kafka__GroupId=antifraud-service
      - Kafka__Topics__TransactionValidationRequest=transaction-validation-request
      - Kafka__Topics__TransactionValidationResponse=transaction-validation-response
    networks:
      - yape-network
    restart: on-failure

networks:
  yape-network:
    driver: bridge

volumes:
  sqlserver_data: 